###############################################################################
## Monit control file
###############################################################################
##
## Comments begin with a '#' and extend through the end of the line. Keywords
## are case insensitive. All path's MUST BE FULLY QUALIFIED, starting with '/'.
##
## Below you will find examples of some frequently used statements. For 
## information about the control file and a complete list of statements and 
## options, please have a look in the Monit manual.
##
##
###############################################################################
## Global section
###############################################################################
##
## Start Monit in the background (run as a daemon):
#

set daemon 5

## Monit has an embedded web server which can be used to view status of 
## services monitored and manage services from a web interface. See the
## Monit Wiki if you want to enable SSL for the web server. 
#

set httpd port 8889
  use address 127.0.0.1
  allow 127.0.0.1

#   with start delay 240    # optional: delay the first check by 4-minutes (by
#                           # default Monit check immediately after Monit start)
#
#
## Set syslog logging with the 'daemon' facility. If the FACILITY option is
## omitted, Monit will use 'user' facility by default. If you want to log to
## a standalone log file instead, specify the full path to the log file
#
# set logfile syslog facility log_daemon
set logfile /tmp/monit.log

## Set the location of the Monit id file which stores the unique id for the
## Monit instance. The id is generated and stored on first Monit start. By
## default the file is placed in $HOME/.monit.id.
#
# set idfile /home/casper/.monit.id
#
## Set the location of the Monit state file which saves monitoring states
## on each cycle. By default the file is placed in $HOME/.monit.state. If
## the state file is stored on a persistent filesystem, Monit will recover
## the monitoring state across reboots. If it is on temporary filesystem, the
## state will be lost on reboot which may be convenient in some situations.
#
#  set statefile /home/casper/lib/monit/state
## By default Monit will drop alert events if no mail servers are available. 
## If you want to keep the alerts for later delivery retry, you can use the 
## EVENTQUEUE statement. The base directory where undelivered alerts will be 
## stored is specified by the BASEDIR option. You can limit the maximal queue
## size using the SLOTS option (if omitted, the queue is limited by space 
## available in the back end filesystem).
#
#  set eventqueue
#      basedir /home/casper/lib/monit/events # set the base directory where events will be stored
#      slots 100                     # optionally limit the queue size

###############################################################################
## Services
###############################################################################

check process app with pidfile /tmp/container-example-webapp-0.0.1-SNAPSHOT.pid
   start program = "/bin/bash -c '/Users/btoal/git/container/container-driver/run.sh start /Users/btoal/git/container/container-example-webapp/target/container-example-webapp-0.0.1-SNAPSHOT.war'"
   stop  program = "/bin/bash -c '/Users/btoal/git/container/container-driver/run.sh stop'"
   if failed host localhost port 8888
     protocol HTTP request "/v1/healthcheck/status?sourcename=monit"
     status < 500
     for 5 cycles then restart
